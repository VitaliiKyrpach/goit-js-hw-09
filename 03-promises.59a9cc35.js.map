{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,G,CAsBAQ,SAASC,cAAc,QAC/BC,iBAAiB,UAnBtB,SAAkBC,GAChBA,EAAIC,iBACJ,MACEC,UAAUC,OAAEA,EAAMd,MAAEA,EAAKe,KAAEA,IACzBJ,EAAIK,cACR,IAAIC,EAAWC,OAAOlB,EAAMmB,OAE5B,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAOK,MAAOC,IAChCtB,EAAcsB,EAAI,EAAGH,EAAWC,OAAOH,EAAKI,OAASC,GAClDC,MAAKF,IACJvB,EAAA0B,OAAOC,QAAQJ,EAAM,IAEtBK,OAAMC,IACL7B,EAAA0B,OAAOI,QAAQD,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  const {\n    elements: { amount, delay, step },\n  } = evt.currentTarget;\n  let countDel = Number(delay.value);\n\n  for (let i = 0; i < amount.value; i++) {\n    createPromise(i + 1, countDel + Number(step.value) * i)\n      .then(value => {\n        Notify.success(value);\n      })\n      .catch(error => {\n        Notify.failure(error);\n      });\n  }\n}\n\nconst form = document.querySelector('form');\nform.addEventListener('submit', onSubmit);\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","elements","amount","step","currentTarget","countDel","Number","value","i","then","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.59a9cc35.js.map"}